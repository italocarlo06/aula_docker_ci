name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.generate_tag.outputs.sha }}
    steps:
      - name: 'Checkout the code'
        uses: actions/checkout@v2

      - name: 'Set up Nodejs'
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: 'Install dependencies'
        run: yarn

      - name: 'Run Tests'
        run: yarn test

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login into the container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 'Build and Push Docker Image'
        run: |
            TAG=${{ steps.generate_tag.outputs.sha }}
            export TAG
            docker compose build
            docker compose push

  deploy:
    name: 'Deploy on Digital Ocean'
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: GITHUB_SHA
          script: |
            # Extract the tag from build job
            TAG=${{ needs.build.outputs.docker_tag }}
            # Login to registry
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} 
            # Stop running container
            docker stop aula-docker-ci-api
            # Remove old container
            docker rm aula-docker-ci-api
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name aula-docker-ci-api \
            ${{ vars.DOCKERHUB_REPOSITORY }}/aula-docker-ci-api:$TAG
